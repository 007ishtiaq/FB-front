{"version":3,"sources":["components/routes/UserRoute.js","components/routes/LoadingToRedirect.js"],"names":["UserRoute","_ref","children","rest","user","useSelector","state","token","React","createElement","Route","LoadingToRedirect","count","setCount","useState","history","useHistory","useEffect","interval","setInterval","currentCount","push","clearInterval","class","Link","to","href"],"mappings":"oGAAA,mDAWeA,UANGC,IAA4B,IAA3B,SAAEC,KAAaC,GAAMF,EACtC,MAAM,KAAEG,GAASC,aAAaC,IAAK,IAAWA,MAE9C,OAAOF,GAAQA,EAAKG,MAAQC,IAAAC,cAACC,QAAUP,GAAWK,IAAAC,cAACE,IAAiB,KAAG,C,mCCRzE,2CAkDeA,IA7CWA,KACxB,MAAOC,EAAOC,GAAYC,mBAAS,GACnC,IAAIC,EAAUC,uBAYd,OAVAC,qBAAU,KACR,MAAMC,EAAWC,aAAY,KAC3BN,GAAUO,KAAmBA,GAAa,GACzC,KAIH,OAFU,IAAVR,GAAeG,EAAQM,KAAK,KAErB,IAAMC,cAAcJ,EAAS,GACnC,CAACN,EAAOG,IAGTP,IAAAC,cAAA,WACED,IAAAC,cAAA,WAASc,MAAM,YACbf,IAAAC,cAAA,OAAKc,MAAM,aACTf,IAAAC,cAAA,OAAKc,MAAM,OACTf,IAAAC,cAAA,OAAKc,MAAM,cACTf,IAAAC,cAAA,OAAKc,MAAM,eACTf,IAAAC,cAAA,OAAKc,MAAM,sBAEXf,IAAAC,cAAA,OAAKc,MAAM,kCACTf,IAAAC,cAAA,MAAIc,MAAM,MAAK,yBAEff,IAAAC,cAAA,SAAG,sBAAoBG,EAAM,YAE7BJ,IAAAC,cAACe,IAAI,CAACC,GAAE,KACL,IACDjB,IAAAC,cAAA,KAAGiB,KAAK,GAAGH,MAAM,6BACd,IAAI,aACM,YASvB,C","file":"static/js/54.db295c7d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LoadingToRedirect from \"./LoadingToRedirect\";\r\n\r\nconst UserRoute = ({ children, ...rest }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  return user && user.token ? <Route {...rest} /> : <LoadingToRedirect />;\r\n};\r\n\r\nexport default UserRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./LoadingToRedirect.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoadingToRedirect = () => {\r\n  const [count, setCount] = useState(6);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((currentCount) => --currentCount);\r\n    }, 1000);\r\n    // redirect once count is equal to 0\r\n    count === 0 && history.push(\"/\");\r\n    // cleanup\r\n    return () => clearInterval(interval);\r\n  }, [count, history]);\r\n\r\n  return (\r\n    <div>\r\n      <section class=\"page_404\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-12 \">\r\n              <div class=\"text-center\">\r\n                <div class=\"four_zero_four_bg\"></div>\r\n\r\n                <div class=\"contant_box_404 redirectbottom\">\r\n                  <h3 class=\"h2\">Look like you're lost</h3>\r\n\r\n                  <p>Redirecting you in {count} seconds</p>\r\n\r\n                  <Link to={`/`}>\r\n                    {\" \"}\r\n                    <a href=\"\" class=\"mybtn btnprimary link_404\">\r\n                      {\" \"}\r\n                      Go to Home{\" \"}\r\n                    </a>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingToRedirect;\r\n"],"sourceRoot":""}